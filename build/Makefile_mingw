# Compiler, tools and options

WORKPATH = ..

CC = gcc
CX = g++
LB = ar

CFLAGS = -pipe -frtti -Wall -Wextra -fexceptions -march=nocona -std=c++11
LFLAGS = -Wl,-s -Wl,-subsystem,console -mthreads
AFLAGS = -csr

DEFINES =
INCPATH = -I$(WORKPATH) -I$(WORKPATH)\third
THIRDLIB =

DEBUG = 0
BITS = 32

ifeq ($(DEBUG), 0)
	# release
	CFLAGS += -O2 -DNDEBUG
	Configuration = release
	THIRDLIB = $(WORKPATH)\third\gtest\lib\win32-g++\gtest.a
else
	# debug
	CFLAGS += -g
	Configuration = debug
	THIRDLIB = $(WORKPATH)\third\gtest\lib\win32-g++\gtestd.a
endif

ifeq ($(BITS), 32)
	# 32-bit
	CFLAGS += -m32
	LFLAGS += -m32
else
	# 64-bit
	CFLAGS += -m64
	LFLAGS += -m64
endif

# Output directory

OUT = bin\$(Configuration)\$(CC)
TMP = tmp\$(Configuration)\$(CC)

# Build rules

.PHONY: all clean out tmp_capo tmp_test

all: $(OUT)\capo.a \
     $(OUT)\ut-main.a \
     $(OUT)\ut-type_name \
     $(OUT)\ut-type_list \
     $(OUT)\ut-concept \
     $(OUT)\ut-constant_array

clean:
	-rmdir /s /q $(TMP)
	-rmdir /s /q $(OUT)

out:
	-mkdir $(OUT)

tmp_capo:
	-mkdir $(TMP)\capo

tmp_test:
	-mkdir $(TMP)\ut-main
	-mkdir $(TMP)\ut-type_name
	-mkdir $(TMP)\ut-type_list
	-mkdir $(TMP)\ut-concept
	-mkdir $(TMP)\ut-constant_array

# Compile capo

$(TMP)\capo\thread_local_ptr.o: $(WORKPATH)\src\thread_local_ptr.cpp | tmp_capo
	$(CX) $(CFLAGS) -o $@ $(INCPATH) -c $^

$(OUT)\capo.a: $(TMP)\capo\thread_local_ptr.o | out
	$(AR) $(AFLAGS) $@ $^

# Compile test

## ut-main

$(TMP)\ut-main\ut-main.o: $(WORKPATH)\test\ut-main\ut-main.cpp | tmp_test
	$(CX) $(CFLAGS) -o $@ $(INCPATH) -c $^

$(OUT)\ut-main.a: $(TMP)\ut-main\ut-main.o | out
	$(AR) $(AFLAGS) $@ $^

## ut-type_name

$(TMP)\ut-type_name\ut-type_name.o: $(WORKPATH)\test\ut-type_name\ut-type_name.cpp | tmp_test
	$(CX) $(CFLAGS) -o $@ $(INCPATH) -c $^

$(OUT)\ut-type_name: $(TMP)\ut-type_name\ut-type_name.o \
                     $(OUT)\ut-main.a $(OUT)\capo.a \
                     $(THIRDLIB) | out
	$(CX) $(LFLAGS) -o $@ $^

## ut-type_list

$(TMP)\ut-type_list\ut-type_list.o: $(WORKPATH)\test\ut-type_list\ut-type_list.cpp | tmp_test
	$(CX) $(CFLAGS) -o $@ $(INCPATH) -c $^

$(OUT)\ut-type_list: $(TMP)\ut-type_list\ut-type_list.o \
                     $(OUT)\ut-main.a $(OUT)\capo.a \
                     $(THIRDLIB) | out
	$(CX) $(LFLAGS) -o $@ $^

## ut-concept

$(TMP)\ut-concept\ut-concept.o: $(WORKPATH)\test\ut-concept\ut-concept.cpp | tmp_test
	$(CX) $(CFLAGS) -o $@ $(INCPATH) -c $^

$(OUT)\ut-concept: $(TMP)\ut-concept\ut-concept.o \
                   $(OUT)\ut-main.a $(OUT)\capo.a \
                   $(THIRDLIB) | out
	$(CX) $(LFLAGS) -o $@ $^

## ut-constant_array

$(TMP)\ut-constant_array\ut-constant_array.o: $(WORKPATH)\test\ut-constant_array\ut-constant_array.cpp | tmp_test
	$(CX) $(CFLAGS) -o $@ $(INCPATH) -c $^

$(OUT)\ut-constant_array: $(TMP)\ut-constant_array\ut-constant_array.o \
                          $(OUT)\ut-main.a $(OUT)\capo.a \
                          $(THIRDLIB) | out
	$(CX) $(LFLAGS) -o $@ $^
